Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:7) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
cluster_cols <- rainbow(7)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 20))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:7),
col = rainbow(7),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
# 4. Кластеризация при помощи дендрограммы
rownames(data_numeric_scaled) <- paste0("[", data$регион[complete.cases(data[numeric_cols])], "] ",
data$страна[complete.cases(data[numeric_cols])])
hc <- hclust(dist(data_numeric_scaled), method="ward.D2")
plot(hc, hang = -1)
rect.hclust(hc, k = 8, border = 2:9)
# 5. Столбчатые диаграммы и боксплоты
clusters <- cutree(hc, k = 8)
# Вывод участников каждого кластера
cluster_membership <- data.frame(
Страна = data$страна[complete.cases(data[numeric_cols])],
Регион = data$регион[complete.cases(data[numeric_cols])],
Кластер = clusters
)
cluster_membership <- cluster_membership[order(cluster_membership$Кластер), ]
split(cluster_membership[, c("Страна", "Регион")], cluster_membership$Кластер)
# Столбчатая диаграмма
cluster_means <- aggregate(data_numeric_scaled,
by = list(cluster = clusters),
FUN = mean)
means_transposed <- t(cluster_means[, -1])
colnames(means_transposed) <- paste("Кластер", 1:8)
colors <- rainbow(nrow(means_transposed))
barplot(means_transposed,
beside = TRUE,
col = colors,
legend.text = rownames(means_transposed),
args.legend = list(x = "topright", bty = "n", cex = 0.8),
main = "Средние значения параметров по кластерам",
ylab = "Стандартизированные значения",
xlab = "Кластеры")
# Боксплоты
cluster_data <- split(data.frame(data_numeric_scaled), clusters)
par(mfrow = c(3, 3), mar = c(4, 4, 2, 1))
for (i in 1:8) {
boxplot(cluster_data[[i]],
main = paste("Кластер", i),
ylab = "Значения",
col = i + 1,
las = 2,
cex.axis = 0.8)
}
par(mfrow = c(1, 1))
# 4. Кластеризация при помощи дендрограммы
rownames(data_numeric_scaled) <- paste0("[", data$регион[complete.cases(data[numeric_cols])], "] ",
data$страна[complete.cases(data[numeric_cols])])
hc <- hclust(dist(data_numeric_scaled), method="ward.D2")
plot(hc, hang = -1)
rect.hclust(hc, k = 8, border = 2:9)
# 5. Столбчатые диаграммы и боксплоты
clusters <- cutree(hc, k = 8)
# Вывод участников каждого кластера
cluster_membership <- data.frame(
Страна = data$страна[complete.cases(data[numeric_cols])],
Регион = data$регион[complete.cases(data[numeric_cols])],
Кластер = clusters
)
cluster_membership <- cluster_membership[order(cluster_membership$Кластер), ]
split(cluster_membership[, c("Страна", "Регион")], cluster_membership$Кластер)
# Столбчатая диаграмма
cluster_means <- aggregate(data_numeric_scaled,
by = list(cluster = clusters),
FUN = mean)
means_transposed <- t(cluster_means[, -1])
colnames(means_transposed) <- paste("Кластер", 1:8)
colors <- rainbow(nrow(means_transposed))
barplot(means_transposed,
beside = TRUE,
col = colors,
legend.text = rownames(means_transposed),
args.legend = list(x = "topright", bty = "n", cex = 0.8),
main = "Средние значения параметров по кластерам",
ylab = "Стандартизированные значения",
xlab = "Кластеры")
# Боксплоты
cluster_data <- split(data.frame(data_numeric_scaled), clusters)
par(mfrow = c(3, 3), mar = c(4, 4, 2, 1))
for (i in 1:8) {
boxplot(cluster_data[[i]],
main = paste("Кластер", i),
ylab = "Значения",
col = i + 1,
las = 2,
cex.axis = 0.8)
}
par(mfrow = c(1, 1))
# 4. Кластеризация при помощи дендрограммы
rownames(data_numeric_scaled) <- paste0("[", data$регион[complete.cases(data[numeric_cols])], "] ",
data$страна[complete.cases(data[numeric_cols])])
hc <- hclust(dist(data_numeric_scaled), method="ward.D2")
plot(hc, hang = -1)
rect.hclust(hc, k = 8, border = 2:9)
# 5. Столбчатые диаграммы и боксплоты
clusters <- cutree(hc, k = 8)
# Вывод участников каждого кластера
cluster_membership <- data.frame(
Страна = data$страна[complete.cases(data[numeric_cols])],
Регион = data$регион[complete.cases(data[numeric_cols])],
Кластер = clusters
)
cluster_membership <- cluster_membership[order(cluster_membership$Кластер), ]
split(cluster_membership[, c("Страна", "Регион")], cluster_membership$Кластер)
# Столбчатая диаграмма
cluster_means <- aggregate(data_numeric_scaled,
by = list(cluster = clusters),
FUN = mean)
means_transposed <- t(cluster_means[, -1])
colnames(means_transposed) <- paste("Кластер", 1:8)
colors <- rainbow(nrow(means_transposed))
barplot(means_transposed,
beside = TRUE,
col = colors,
legend.text = rownames(means_transposed),
args.legend = list(x = "topright", bty = "n", cex = 0.8),
main = "Средние значения параметров по кластерам",
ylab = "Стандартизированные значения",
xlab = "Кластеры")
# Боксплоты
cluster_data <- split(data.frame(data_numeric_scaled), clusters)
par(mfrow = c(3, 3), mar = c(4, 4, 2, 1))
for (i in 1:8) {
boxplot(cluster_data[[i]],
main = paste("Кластер", i),
ylab = "Значения",
col = i + 1,
las = 2,
cex.axis = 0.8)
}
par(mfrow = c(1, 1))
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 20))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
km <- kmeans(data_numeric_scaled, centers = 8)
fviz_cluster(km, data = data_numeric_scaled,
geom = "text",
labelsize=8)
cluster_countries <- data.frame(
Страна = rownames(data_numeric_scaled),
Кластер = km$cluster
)
cluster_countries <- cluster_countries[order(cluster_countries$Кластер), ]
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 20))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 20))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(5, 5, 6, 20))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 0.7)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend(x = "right",
legend = paste("Кл.", 1:8),  # Сокращаем "Кластер" до "Кл."
fill = rainbow(8),
title = "Кластеры",
inset = -0.25,  # Сдвигаем легенду правее
cex = 0.7,      # Уменьшаем размер
y.intersp = 0.8, # Уменьшаем расстояние между строками
bty = "n")
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25))  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 1)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25),
pch = 19)  # Увеличиваем правое поле для легенды
# Добавляем легенду
par(xpd = TRUE)  # Позволяем рисовать за пределами основного графика
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,       # Тип точки (круг)
title = "Кластеры",
cex = 1)
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25))
par(xpd = TRUE)
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,
title = "Кластеры",
cex = 1)
# Вывод стран в кластерах
for (i in 1:8) {
cat("\n=== Кластер", i, "===\n")
print(cluster_countries[cluster_countries$Кластер == i, "Страна"], quote = FALSE)
}
# 7. Скаттерплот для k-means
cluster_cols <- rainbow(8)[km$cluster]
pairs(data_numeric_scaled,
main = "Матрица scatterplot по кластерам",
col = cluster_cols,
oma = c(4, 4, 6, 25))
par(xpd = TRUE)
legend("right",
legend = paste("Кластер", 1:8),
col = rainbow(8),
pch = 19,
title = "Кластеры",
cex = 1)
