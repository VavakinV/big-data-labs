par(mfrow = c(1, 2))
hist(basketball[[var]], main = paste(title, "(баскетбол)"),
xlab = unit, col = "lightblue", xlim = x_lim)
hist(data[[var]], main = paste(title, "(все атлеты)"),
xlab = unit, col = "lightgreen", xlim = x_lim)
# Боксплоты
par(mfrow = c(1, 2))
boxplot(basketball[[var]], main = paste(title, "(баскетбол)"),
ylab = unit, ylim = x_lim)
boxplot(data[[var]], main = paste(title, "(все атлеты)"),
ylab = unit, ylim = x_lim)
# Сброс параметров
par(mfrow = c(1, 1))
}
# Построение графиков для каждого параметра
plot_pair("Age", "Возраст", "лет", age_lim)
plot_pair("Height", "Рост", "см", height_lim)
plot_pair("Weight", "Вес", "кг", weight_lim)
# Вывод статистик (как в предыдущем коде)
cat("=== Основные статистики ===\n")
cat("Баскетболисты:\n")
print(summary(basketball[, c("Age", "Height", "Weight")]))
cat("\nВсе атлеты:\n")
print(summary(data[, c("Age", "Height", "Weight")]))
cat("Самый возрастной:", data$Name[which.min(data$Age)],
"-", min(data$Age, na.rm = TRUE), "лет\n")
# Фильтрация баскетболистов
basketball <- data[data$Sport == "Basketball", ]
# Функция для установки общих границ
get_limits <- function(var) {
range(na.omit(c(data[[var]], basketball[[var]])))
}
age_lim <- get_limits("Age")
height_lim <- get_limits("Height")
weight_lim <- get_limits("Weight")
plot_pair <- function(var, title, unit, x_lim) {
par(mfrow = c(2, 2))
hist(basketball[[var]], main = paste(title, "(баскетбол)"),
xlab = unit, col = "lightblue", xlim = x_lim)
hist(data[[var]], main = paste(title, "(все атлеты)"),
xlab = unit, col = "lightgreen", xlim = x_lim)
boxplot(basketball[[var]], main = paste(title, "(баскетбол)"),
ylab = unit, ylim = x_lim)
boxplot(data[[var]], main = paste(title, "(все атлеты)"),
ylab = unit, ylim = x_lim)
par(mfrow = c(1, 1))
}
plot_pair("Age", "Возраст", "лет", age_lim)
plot_pair("Height", "Рост", "см", height_lim)
plot_pair("Weight", "Вес", "кг", weight_lim)
cat("=== Основные статистики ===\n")
cat("Баскетболисты:\n")
print(summary(basketball[, c("Age", "Height", "Weight")]))
cat("\nВсе атлеты:\n")
print(summary(data[, c("Age", "Height", "Weight")]))
cat("Самый возрастной:", data$Name[which.min(data$Age)],
"-", min(data$Age, na.rm = TRUE), "лет\n")
shapiro.test(basketball)
shapiro.test(basketball$Weight)
length(basketball)
basketball
n(basketball)
length(basketball$ID)
shapiro.test(basketball$Weight)
basketball_filtered <- data[data$Sport == "Basketball" & data$Weight < 125 & !is.na(data$Weight), ]
shapiro.test(basketball_filtered$Weight)
shapiro.test(basketball$Weight)
basketball_filtered <- data[data$Sport == "Basketball" & data$Weight < 110 & !is.na(data$Weight), ]
shapiro.test(basketball_filtered$Weight)
basketball_filtered <- data[data$Sport == "Basketball" & data$Weight < 130 & !is.na(data$Weight), ]
shapiro.test(basketball_filtered$Weight)
basketball_filtered <- data[data$Sport == "Basketball" & data$Weight < 150 & !is.na(data$Weight), ]
shapiro.test(basketball_filtered$Weight)
basketball_filtered <- data[data$Sport == "Basketball" & data$Weight <= 95 & data$Weight >= 75 & !is.na(data$Weight), ]
shapiro.test(basketball_filtered$Weight)
shapiro.test(basketball$Weight)
qqnorm(basketball$Weight)
qqline(basketball$Weight, col=2)
shapiro.test(athlete_data$weight)
shapiro.test(data$weight)
shapiro.test(data$Weight)
shapiro.test(data[1:5000]$Weight)
shapiro.test(data[,1:5000]$Weight)
shapiro.test(data[1:5000,]$Weight)
shapiro.test(basketball[1:100, ]$Weight)
shapiro.test(basketball[1:10, ]$Weight)
shapiro.test(basketball[1:500, ]$Weight)
shapiro.test(basketball[1:200, ]$Weight)
shapiro.test(basketball[1:100, ]$Weight)
v <- rnorm(1000, 0, 1)
shapiro.test(v)
v <- rnorm(5000, 0, 1)
shapiro.test(v)
library(car)
qqPlot(basketball$Weight)
v <- rnorm(10000)
qqPlot(v)
shapiro.test(basketball[1:100, ]$Weight)
qqPlot(basketball$Weight)
v <- rnorm(5000)
qqPlot(v)
basketball_unique <- basketball[!duplicated(basketball$ID), ]
shapiro.test(basketball_unique$Weight)
qqPlot(basketball_unique$Weight)
# Чтение данных из CSV-файла
data <- read.csv("athlete_events.csv",
header = TRUE,
stringsAsFactors = FALSE,
na.strings = c("NA", ""),
quote = "\"")
str(data)
head(data)
# 1. Дескриптивный анализ
basketball <- data[data$Sport == "Basketball", ]
basketball <- basketball[!duplicated(basketball$ID), ]
# Функция для установки общих границ
get_limits <- function(var) {
range(na.omit(c(data[[var]], basketball[[var]])))
}
age_lim <- get_limits("Age")
height_lim <- get_limits("Height")
weight_lim <- get_limits("Weight")
plot_pair <- function(var, title, unit, x_lim) {
par(mfrow = c(2, 2))
hist(basketball[[var]], main = paste(title, "(баскетбол)"),
xlab = unit, col = "lightblue", xlim = x_lim)
hist(data[[var]], main = paste(title, "(все атлеты)"),
xlab = unit, col = "lightgreen", xlim = x_lim)
boxplot(basketball[[var]], main = paste(title, "(баскетбол)"),
ylab = unit, ylim = x_lim)
boxplot(data[[var]], main = paste(title, "(все атлеты)"),
ylab = unit, ylim = x_lim)
par(mfrow = c(1, 1))
}
plot_pair("Age", "Возраст", "лет", age_lim)
plot_pair("Height", "Рост", "см", height_lim)
plot_pair("Weight", "Вес", "кг", weight_lim)
cat("Баскетболисты:\n")
print(summary(basketball[, c("Age", "Height", "Weight")]))
cat("\nВсе атлеты:\n")
print(summary(data[, c("Age", "Height", "Weight")]))
data <- data[!duplicated(data$ID), ]
# 1. Дескриптивный анализ
basketball <- data[data$Sport == "Basketball", ]
# Функция для установки общих границ
get_limits <- function(var) {
range(na.omit(c(data[[var]], basketball[[var]])))
}
age_lim <- get_limits("Age")
height_lim <- get_limits("Height")
weight_lim <- get_limits("Weight")
plot_pair <- function(var, title, unit, x_lim) {
par(mfrow = c(2, 2))
hist(basketball[[var]], main = paste(title, "(баскетбол)"),
xlab = unit, col = "lightblue", xlim = x_lim)
hist(data[[var]], main = paste(title, "(все атлеты)"),
xlab = unit, col = "lightgreen", xlim = x_lim)
boxplot(basketball[[var]], main = paste(title, "(баскетбол)"),
ylab = unit, ylim = x_lim)
boxplot(data[[var]], main = paste(title, "(все атлеты)"),
ylab = unit, ylim = x_lim)
par(mfrow = c(1, 1))
}
plot_pair("Age", "Возраст", "лет", age_lim)
plot_pair("Height", "Рост", "см", height_lim)
plot_pair("Weight", "Вес", "кг", weight_lim)
cat("Баскетболисты:\n")
print(summary(basketball[, c("Age", "Height", "Weight")]))
cat("\nВсе атлеты:\n")
print(summary(data[, c("Age", "Height", "Weight")]))
length(data$ID)
shapiro.test(basketball$Weight)
qqPlot(basketball$Weight)
v <- rnorm(5000)
qqPlot(v)
# 2. Проверка нормальности
basketball_weights <- basketball$Weight
shapiro.test(basketball_weights)
qqPlot(basketball_weights)
# Пример околоидеального нормального распределения
v <- rnorm(5000)
qqPlot(v)
# 3. Проверка гипотезы
t.test(basketball_weights, mu=mean(basketball_weights), conf.int=TRUE)
# 3. Проверка гипотезы
mean(basketball_weights)
# 2. Проверка нормальности
basketball_weights <- basketball$Weight[!is.na(basketball$Weight)]
shapiro.test(basketball_weights)
qqPlot(basketball_weights)
# Пример околоидеального нормального распределения
v <- rnorm(5000)
qqPlot(v)
# 3. Проверка гипотезы
mean(basketball_weights)
t.test(basketball_weights, mu=mean(basketball_weights), conf.int=TRUE)
# 2. Проверка нормальности
basketball_weights <- na.omit(basketball$Weight)
shapiro.test(basketball_weights)
qqPlot(basketball_weights)
# Пример околоидеального нормального распределения
v <- rnorm(5000)
qqPlot(v)
# 3. Проверка гипотезы
mean(basketball_weights)
t.test(basketball_weights, mu=mean(basketball_weights), conf.int=TRUE)
# 3. Проверка гипотезы
wilcox.test(basketball_weights, mu=mean(basketball_weights), conf.int=TRUE)
# 3. Проверка гипотезы
wilcox.test(basketball_weights, mu=median(basketball_weights), conf.int=TRUE)
soccer_weights <- data[data$Sport == "Football" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
# Создание объединённого датафрейма
weights_df <- data.frame(
Weight = c(soccer_weights, basketball_weights),
Sport = c(rep("Football", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
# Проверка структуры
str(weights_df)
# Вывод первых строк
head(weights_df)
# Вывод первых строк
head(weights_df, 15)
bartlett.test(Weight~Sport, data=weights_df)
t.test(Weight~Sport, data=weights_df)
t.test(Weight~Sport)
t.test(Weight~Sport, data=weights_df)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Judo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Football", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Judo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Judo", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Judo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Judo", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Judo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Judo", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Football" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Judo", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Athletics" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Ice Hockey" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(soccer_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
w
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Ice Hockey" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Judo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Athletics" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Handball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Volleyball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Water Polo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Water Polo" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Rugby" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Baseball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Tennis" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Wrestling" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Rowing" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Shooting" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Sybchronized Swimming" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Synchronized Swimming" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Gymnastics" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Fencing" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Modern Pentathlon" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
football_weights <- data[data$Sport == "Rugby" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(football_weights, basketball_weights),
Sport = c(rep("Athletics", length(football_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 4. Проверка равенства дисперсий
rugby_weights <- data[data$Sport == "Rugby" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(rugby_weights, basketball_weights),
Sport = c(rep("Rugby", length(rugby_weights)),
rep("Basketball", length(basketball_weights)))
)
boxplot(Weight ~ Sport, data = weights_df, las = 2)
bartlett.test(Weight~Sport, data=weights_df)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df)
var(rugby_weights, na.rm=TRUE)
var(basketball_weights, na.rm=TRUE)
# 4. Проверка равенства дисперсий
rugby_weights <- data[data$Sport == "Rugby" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
basketball_weights <- data[data$Sport == "Basketball" & data$Sex == "M" & !is.na(data$Weight), "Weight"]
weights_df <- data.frame(
Weight = c(rugby_weights, basketball_weights),
Sport = c(rep("Rugby", length(rugby_weights)),
rep("Basketball", length(basketball_weights)))
)
bartlett.test(Weight~Sport, data=weights_df)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df, paired=FALSE, )
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df, paired=FALSE, var.equal=TRUE)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, paired=FALSE, var.equal=TRUE)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df, var.equal=TRUE)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df)
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
wilcox.test(Weight~Sport, data=weights_df)
t
# 5. Проверка гипотезы о равенстве среднего веса баскетболистов и рэгбистов
t.test(Weight~Sport, data=weights_df)
